rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {

    // ========= UTILITAIRES =========
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return request.auth != null && request.auth.token.role == 'admin';
    }

    function isDevMode() {
      return exists(/databases/(default)/documents/settings/env) &&
             get(/databases/(default)/documents/settings/env).data.mode == 'dev';
    }

    function isValidFileSize() {
      return request.resource != null && request.resource.size < 15 * 1024 * 1024; // 15MB
    }

    function isImage() {
      return request.resource != null && request.resource.contentType.matches('image/.*');
    }

    function isValidDocumentType() {
      return request.resource != null && request.resource.contentType in [
        'application/pdf',
        'image/jpeg',
        'image/png',
        'image/webp',
        'application/msword',
        'application/vnd.openxmlformats-officedocument.wordprocessingml.document'
      ];
    }

    // ========= PHOTOS DE PROFIL =========
    match /profilePhotos/{userId}/{fileName} {
      allow read: if true || isDevMode();
      allow write: if (isAuthenticated()
                    && request.auth.uid == userId
                    && isImage()
                    && isValidFileSize()) || isDevMode();
      allow delete: if (isAuthenticated() && (request.auth.uid == userId || isAdmin())) || isDevMode();
    }

    // ========= PHOTOS TEMPORAIRES POUR INSCRIPTION =========
    // ðŸ”¥ CORRECTION : Autoriser l'upload SANS authentification pour l'inscription
    match /registration_temp/{fileName} {
      allow read: if true || isDevMode();
      allow write: if (isImage() && isValidFileSize()) || isDevMode();
      allow delete: if isAdmin() || isDevMode();
    }

    // ========= DOSSIER TEMPORAIRE =========
    // ðŸ”¥ CORRECTION : MÃªme chose pour temp_profiles
    match /temp_profiles/{fileName} {
      allow read: if true || isDevMode();
      allow write: if (isImage() && isValidFileSize()) || isDevMode();
      allow delete: if isAdmin() || isDevMode();
    }

    // ========= DOCUMENTS UTILISATEURS =========
    match /documents/{userId}/{fileName} {
      allow read: if (isAuthenticated() && (request.auth.uid == userId || isAdmin())) || isDevMode();
      allow write: if (isAuthenticated()
                    && request.auth.uid == userId
                    && isValidDocumentType()
                    && isValidFileSize()) || isDevMode();
      allow delete: if (isAuthenticated() && (request.auth.uid == userId || isAdmin())) || isDevMode();
    }

    // ========= FACTURES / ADMIN =========
    match /invoices/{userId}/{fileName} {
      allow read: if (isAuthenticated() && (request.auth.uid == userId || isAdmin())) || isDevMode();
      allow write, delete: if (isAdmin() && isValidDocumentType() && isValidFileSize()) || isDevMode();
    }

    // ========= SAUVEGARDES =========
    match /backups/{fileName} {
      allow read, write: if isAdmin() || isDevMode();
    }

    // ========= PAR DÃ‰FAUT =========
    match /{allPaths=**} {
      allow read, write: if false || isDevMode();
    }
  }
}